{"version":3,"sources":["Login.js","Cart.js","Homepage.js","Register.js","App.js","index.js"],"names":["Login","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onLogin","users","find","user","username","state","password","successPopUp","changePage","changeLogin","setLoggedUser","setState","errorMessage","redirectRegister","Swal","mixin","toast","position","showConfirmButton","timer","background","color","fire","icon","title","concat","inherits","createClass","key","value","_this2","react_default","a","createElement","className","Container","Row","Col","md","lg","xs","Card","Body","Form","Group","FloatingLabel","label","Control","placeholder","onChange","event","target","type","Alert","variant","Button","onClick","size","React","Component","Cart","redirect","window","open","checkout","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","Modal","show","showModal","aria-labelledby","onHide","closeModal","centered","Header","closeButton","closeVariant","Title","id","bg","Img","src","modalItem","image","style","height","name","Text","detail","cart","map","i","item","formatCurrency","price","Badge","amount","InputGroup","substractAmount","addAmount","remove","Offcanvas","showCart","cartClose","placement","Stack","direction","gap","alt","width","objectFit","maxWidth","fontSize","openModal","total","disabled","Homepage","logout","Toast","login","findItems","items_filtered","items","filter","x","toLowerCase","includes","findTotal","reduce","accumulator","cartShow","is_logged_in","loginPopUp","cartPopUp","updateCount","count","addToCart","index","indexOf","splice","Intl","NumberFormat","currency","format","page","axios","get","res","data","runHolder","_this3","src_Cart","Navbar","expand","sticky","fluid","Brand","xmlns","fill","class","viewBox","fill-rule","d","Toggle","aria-controls","aria-label","e","bottom","right","transform","logged_in_user","Carousel","fade","Item","Caption","sm","href","Register","onRegister","confirmPassword","addUser","redirectLogin","App","newPage","src_Login","src_Register","src_Homepage_0","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.841acccd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errorMessage: \"\",\r\n        }\r\n    }\r\n\r\n    onLogin = () => {\r\n        if (this.props.users.find(user => (user.username === this.state.username && user.password === this.state.password))) {\r\n            this.successPopUp();\r\n            this.props.changePage(\"Homepage\");\r\n            this.props.changeLogin(true);\r\n            this.props.setLoggedUser(this.state.username)\r\n        } \r\n        else {\r\n            this.setState({ errorMessage: \"Invalid Login\" });\r\n        }\r\n    }\r\n\r\n    redirectRegister = () => {\r\n        this.props.changePage(\"Register\");\r\n    }\r\n\r\n    successPopUp = () => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            background: \"#000000\",\r\n            color: \"#FFFFFF\",\r\n          })\r\n          \r\n          Toast.fire({\r\n            icon: 'success',\r\n            title: `Signed in successfully as ${this.state.username}`\r\n          })\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login gradient-custom\">\r\n                <Container>\r\n                    <Row className=\"vh-100 d-flex justify-content-center align-items-center\">\r\n                    <Col md={8} lg={6} xs={12}>\r\n                        <Card className=\"shadow bg-dark text-white\">\r\n                        <Card.Body className=\"text-center\">\r\n                            <div className=\"mb-3 mt-md-4\">\r\n                                <h2 className=\"fw-bold mb-2 text-uppercase\">Login</h2>\r\n                                <p className=\" mb-5\">Please enter your username and password!</p>\r\n                                    <div className=\"mb-3\">\r\n\r\n                                        <Form>\r\n                                            <Form.Group className=\"mb-3\">\r\n                                                <FloatingLabel label=\"Username\" className=\"mb-3 text-secondary\">\r\n                                                    <Form.Control placeholder=\"Enter Username\" value={this.state.username} onChange={event => this.setState({ username: event.target.value })}/>\r\n                                                </FloatingLabel>\r\n                                            </Form.Group>             \r\n\r\n                                            <Form.Group className=\"mb-3\">\r\n                                                <FloatingLabel label=\"Password\" className=\"mb-3 text-secondary\">\r\n                                                    <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={event => this.setState({ password: event.target.value })}/>\r\n                                                </FloatingLabel>\r\n                                            </Form.Group>\r\n\r\n                                            {\r\n                                                this.state.errorMessage !== \"\" ?\r\n                                                    <Alert variant=\"danger\">{this.state.errorMessage}</Alert> : null\r\n                                            }\r\n\r\n                                            <div className=\"d-grid\">\r\n                                                <Button variant=\"outline-light\" onClick={this.onLogin} size=\"lg\">\r\n                                                    Login\r\n                                                </Button>\r\n                                            </div>    \r\n\r\n                                        </Form>\r\n\r\n                                        <div className=\"mt-3\">\r\n                                            <p className=\"mb-0 text-center\">\r\n                                                <span className=\"d-inline-block align-middle\">Don't have an account?</span>\r\n                                                <Button variant=\"link ps-1 pt-1\" onClick={this.redirectRegister}>Register</Button>\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Card from 'react-bootstrap/Card';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nclass Cart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    redirect = () => {\r\n        window.open(\"https://github.com/Riyuze/ecommerce-react\")\r\n    }\r\n\r\n    checkout = () => {\r\n        Swal.fire({\r\n            title: 'Thank you for trying Reacto!',\r\n            text: \"Would you like to see the source code?\",\r\n            icon: 'success',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, take me there!',\r\n            color: '#FFFFFF',\r\n            background: '#000000'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              Swal.fire({\r\n                title: 'Redirected!',\r\n                text: 'This project was made by Kevin Tandavo.',\r\n                icon: 'success',\r\n                confirmButtonColor: '#3085d6',\r\n                color: '#FFFFFF',\r\n                background: '#000000'\r\n                })\r\n                this.redirect();\r\n            }\r\n          })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Cart\">\r\n\r\n                <Modal show={this.props.showModal} size=\"sm\" aria-labelledby=\"contained-modal-title-vcenter\" onHide={() => { this.props.closeModal() }} centered>\r\n                    <Modal.Header closeButton className=\"bg-black text-white\" closeVariant=\"white\">\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\" className=\"bg-black\">\r\n                            Edit Item\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"bg-black text-white\">\r\n                        <Card bg=\"black\" text=\"white\" className=\"text-center h-100\">\r\n                            <Card.Img className=\"rounded\" src={this.props.modalItem.image} style={{ height: \"125px\"}}/>\r\n                                <Card.Body className=\"d-flex flex-column\">\r\n                                    <Card.Title className=\"fw-bold fs-4\">{this.props.modalItem.name}</Card.Title>\r\n                                    <div className=\"mt-auto d-flex flex-column\">\r\n                                        <Card.Text>{this.props.modalItem.detail}</Card.Text>\r\n                                        {this.props.cart.map((i) => {\r\n                                            if (i.item === this.props.modalItem) {\r\n                                                return <div>\r\n                                                    <Card.Text className=\"fw-bold\">{this.props.formatCurrency(this.props.modalItem.price)}</Card.Text>\r\n                                                    <div className=\"d-flex justify-content-center\">\r\n                                                        <Badge bg=\"dark\" className=\"fs-5 fw-bold mb-4 text-decoration-underline\">Subtotal: {this.props.formatCurrency(this.props.modalItem.price * i.amount)}</Badge>\r\n                                                    </div>\r\n                                               </div>\r\n                                            }\r\n                                            return null\r\n                                        })}\r\n                                            <div className=\"d-flex\">                                                       \r\n                                                <InputGroup>\r\n                                                <Button variant=\"primary\" onClick={() => { this.props.substractAmount(this.props.modalItem) }}>-</Button>\r\n                                                    <InputGroup.Text>\r\n                                                    {this.props.cart.map((i) => {\r\n                                                        if (i.item === this.props.modalItem) {\r\n                                                            return i.amount\r\n                                                        }\r\n                                                        return null\r\n                                                    })}\r\n                                                    </InputGroup.Text>\r\n                                                <Button variant=\"primary\" onClick={() => { this.props.addAmount(this.props.modalItem) }}>+</Button>\r\n                                                </InputGroup>\r\n                                                <Button variant=\"danger\" onClick={() => { this.props.remove(this.props.modalItem) }}>Remove</Button> \r\n                                            </div>                                               \r\n                                    </div>\r\n                                </Card.Body>\r\n                        </Card>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Offcanvas show={this.props.showCart} onHide={this.props.cartClose} placement=\"end\" className=\"bg-black text-white\">\r\n                    <Offcanvas.Header closeButton closeVariant=\"white\">\r\n                        <Offcanvas.Title className=\"fw-bold fs-2\">Cart</Offcanvas.Title>\r\n                    </Offcanvas.Header>\r\n                    <Offcanvas.Body>\r\n                        {\r\n                            this.props.cart.map((item) => {\r\n                                return <Stack direction=\"horizontal\" gap={2} className=\"d-flex align-items-center mb-4\">\r\n                                            <img src={item.item.image} alt=\"\" style={{ width: \"200px\", height: \"75px\", objectFit: \"fill\", maxWidth: \"125px\"}} className=\"rounded\"></img>\r\n                                            <div className=\"me-auto\">\r\n                                                <div>\r\n                                                {item.item.name}{\" \"}\r\n                                                {item.amount > 1 && (\r\n                                                    <span className=\"text-muted\" style={{ fontSize: \".65rem\" }}>&times;{item.amount}</span>\r\n                                                )}\r\n                                                <div className=\"text-muted\" style={{ fontSize: \".75rem\" }}>{this.props.formatCurrency(item.item.price)}</div>\r\n                                                </div>\r\n                                                <div style={{ fontSize: \".90rem\" }}>\r\n                                                    <Badge bg=\"dark\">{this.props.formatCurrency(item.item.price * item.amount)}</Badge>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Button variant=\"success\" size=\"sm\" onClick={() => { this.props.openModal(item.item) }}>Edit</Button> \r\n                                    </Stack>\r\n                            })                        \r\n                        }\r\n                        {\r\n                            //eslint-disable-next-line\r\n                            this.props.cart == \"\" ?\r\n                            null :\r\n                            <div className=\"d-flex float-end text-decoration-underline\">\r\n                                <Badge className=\"fw-bold fs-5\" bg=\"dark\">Total: {this.props.formatCurrency(this.props.total)}</Badge>\r\n                            </div>\r\n                        }\r\n                    </Offcanvas.Body>\r\n                    {\r\n                    //eslint-disable-next-line\r\n                    this.props.cart == \"\" ?\r\n                    <div className=\"align-items-center d-grid\">\r\n                        <Button variant=\"dark\" className=\"fw-bold fs-5 me-3 ms-3 mb-3 mt-3\" disabled>No Items</Button>\r\n                    </div> :\r\n                    <div className=\"align-items-center d-grid\">\r\n                        <Button className=\"fw-bold fs-5 me-3 ms-3 mb-3 mt-3\" onClick={() => { this.checkout() }}>Checkout</Button>\r\n                    </div>\r\n                    }\r\n                </Offcanvas>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cart;\r\n","import './Homepage.css';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport Cart from './Cart';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport Swal from 'sweetalert2';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { run as runHolder } from 'holderjs';\r\n\r\n\r\n\r\nclass Homepage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: \"Homepage\",\r\n            item: \"\",\r\n            items: [],\r\n            items_filtered: [],\r\n            cart: [],\r\n            showCart: false,\r\n            total: 0,\r\n            showModal: false,\r\n            modalItem: \"\",\r\n            count: 0\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get('https://online.akomate.com/atma/api/products').then(res => {\r\n            this.setState({\r\n                items: res.data\r\n            })\r\n        })\r\n        runHolder();\r\n    }\r\n\r\n    logout = () => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            background: \"#000000\",\r\n            color: \"#FFFFFF\",\r\n          })\r\n        \r\n        Swal.fire({\r\n            title: 'Logging Out?',\r\n            text: 'Do you want to log out?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#3085d6',\r\n            confirmButtonText: 'Log Out!',\r\n            color: '#FFFFFF',\r\n            background: '#000000'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'Signed out successfully'\r\n                    })\r\n                this.props.changeLogin(false);\r\n                }\r\n            }\r\n          )\r\n        this.setState({cart: []})\r\n    }\r\n\r\n    login = () => {\r\n        this.props.changePage(\"Login\");\r\n    }\r\n\r\n    findItems = () => {\r\n        this.setState({ items_filtered: this.state.items.filter(x => x.name.toLowerCase().includes(this.state.item.toLowerCase())) });\r\n    }\r\n\r\n    findTotal = () => {\r\n        this.setState({total: this.state.cart.reduce((accumulator, item) => {\r\n            return accumulator + (item.item.price * item.amount)\r\n        }, 0)})\r\n    }\r\n\r\n    cartShow = () => {\r\n        if (this.props.is_logged_in === false) {\r\n            this.loginPopUp(\"cart\");\r\n        }\r\n        else {\r\n            this.setState({showCart: true});\r\n            this.findTotal();\r\n        }\r\n    }\r\n\r\n    cartClose = () => {\r\n        this.setState({showCart: false});\r\n    }\r\n\r\n    cartPopUp = () => {\r\n        Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Item successfully added to cart',\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n            color: \"#FFFFFF\",\r\n            background: \"#000000\",\r\n          })\r\n    }\r\n\r\n    loginPopUp = (type) => {\r\n        let text = \"\"\r\n        if (type === \"item\" ) {\r\n            text = \"You need to log in to add this item to cart!\"\r\n        }\r\n        else {\r\n            text = \"You need to log in to open cart!\"\r\n        }\r\n        Swal.fire({\r\n            title: 'Not logged in!',\r\n            text: `${text}`,\r\n            icon: 'error',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Login',\r\n            color: \"#FFFFFF\",\r\n            background: \"#000000\"\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              this.login();\r\n            }\r\n          })\r\n    }\r\n\r\n    updateCount = () => {\r\n        this.setState({count: this.state.cart.reduce((accumulator, item) => {\r\n            return accumulator + item.amount\r\n        }, 0)})\r\n    }\r\n\r\n    addToCart = (item, amount) => {\r\n        if (this.props.is_logged_in === false) {\r\n            this.loginPopUp(\"item\");\r\n        }\r\n        else {\r\n            this.setState({ cart: this.state.cart.concat({ item, amount }) });\r\n            this.cartPopUp();\r\n            this.setState({ count: this.state.count + 1 });\r\n        }\r\n    }\r\n\r\n    addAmount = (item) => {\r\n        this.state.cart.map((i) => {\r\n            if (i.item === item) {\r\n                i.amount += 1\r\n                return i\r\n            }\r\n            return null\r\n        })\r\n        this.setState({ cart: this.state.cart });\r\n        this.findTotal();\r\n        this.updateCount();\r\n    }\r\n\r\n    substractAmount = (item) => {\r\n        this.state.cart.map((i) => {\r\n            if (i.item === item) {\r\n                if (i.amount === 1) {\r\n                    Swal.fire({\r\n                        title: 'Are you sure?',\r\n                        text: 'Do you want to remove this item from cart?',\r\n                        icon: 'warning',\r\n                        showCancelButton: true,\r\n                        confirmButtonColor: '#d33',\r\n                        cancelButtonColor: '#3085d6',\r\n                        confirmButtonText: 'Yes, remove it!',\r\n                        color: '#FFFFFF',\r\n                        background: '#000000'\r\n                      }).then((result) => {\r\n                        if (result.isConfirmed) {\r\n                          Swal.fire({\r\n                            title: 'Removed!',\r\n                            text: 'This item has been removed.',\r\n                            icon: 'success',\r\n                            color: '#FFFFFF',\r\n                            background: '#000000',\r\n                            showConfirmButton: false,\r\n                            timer: 1000,\r\n                            })\r\n                          const index = this.state.cart.indexOf(i);\r\n                          if (index > -1 ) {\r\n                            this.state.cart.splice(index, 1);\r\n                          }\r\n                          this.setState({ cart: this.state.cart });\r\n                          this.closeModal();\r\n                          this.updateCount();\r\n                        }\r\n                      })\r\n                }\r\n                else {\r\n                    i.amount -= 1\r\n                }  \r\n                return i\r\n            }\r\n            return null\r\n        })\r\n        this.setState({ cart: this.state.cart });\r\n        this.findTotal();\r\n        this.updateCount();\r\n    }\r\n\r\n    remove = (item) => {\r\n        this.state.cart.map((i) => {\r\n            if (i.item === item) {\r\n                Swal.fire({\r\n                    title: 'Are you sure?',\r\n                    text: 'Do you want to remove this item from cart?',\r\n                    icon: 'warning',\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: '#d33',\r\n                    cancelButtonColor: '#3085d6',\r\n                    confirmButtonText: 'Yes, remove it!',\r\n                    color: '#FFFFFF',\r\n                    background: '#000000'\r\n                    }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        Swal.fire({\r\n                        title: 'Removed!',\r\n                        text: 'This item has been removed.',\r\n                        icon: 'success',\r\n                        color: '#FFFFFF',\r\n                        background: '#000000',\r\n                        showConfirmButton: false,\r\n                        timer: 1000,\r\n                        })\r\n                        const index = this.state.cart.indexOf(i);\r\n                        if (index > -1 ) {\r\n                        this.state.cart.splice(index, 1);\r\n                        }\r\n                        this.setState({ cart: this.state.cart });\r\n                        this.closeModal();\r\n                        this.findTotal();\r\n                        this.updateCount();\r\n                    }\r\n                    })\r\n                }\r\n            return null\r\n        })\r\n    }\r\n\r\n    openModal = (i) => {\r\n        this.setState({ showModal: true });\r\n        this.setState({ modalItem: i })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    formatCurrency = (price) => {\r\n        return new Intl.NumberFormat(\"id-ID\", {\r\n            style: \"currency\",\r\n            currency: \"IDR\"\r\n        }).format(price);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Homepage bg-dark\">\r\n\r\n                <Cart showCart={this.state.showCart} cart={this.state.cart} cartClose={this.cartClose} total={this.state.total} showModal={this.state.showModal} modalItem={this.state.modalItem}\r\n                openModal={this.openModal} closeModal={this.closeModal} formatCurrency={this.formatCurrency} addAmount={this.addAmount} substractAmount={this.substractAmount} remove={this.remove}/>\r\n\r\n                <Navbar bg=\"black\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n                    <Container fluid>\r\n                        <Navbar.Brand className=\"me-4 ms-2 d-flex\">\r\n                            Reacto <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chevron-bar-expand\" viewBox=\"0 0 16 16\">\r\n                                <path fill-rule=\"evenodd\" d=\"M3.646 10.146a.5.5 0 0 1 .708 0L8 13.793l3.646-3.647a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 0-.708zm0-4.292a.5.5 0 0 0 .708 0L8 2.207l3.646 3.647a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 0 0 0 .708zM1 8a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 0 1h-13A.5.5 0 0 1 1 8z\"/>\r\n                            </svg>\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls={`offcanvasNavbar-expand-lg`} />\r\n                        <Navbar.Offcanvas\r\n                            id={`offcanvasNavbar-expand-lg`}\r\n                            aria-labelledby={`offcanvasNavbarLabel-expand-lg`}\r\n                            placement=\"start\"\r\n                            className=\"bg-black text-white\"\r\n                            >\r\n                            <Offcanvas.Header closeButton closeVariant=\"white\">\r\n                                <Offcanvas.Title id={`offcanvasNavbarLabel-expand-lg`} className=\"me-4 ms-2 d-flex\">\r\n                                    Reacto <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chevron-bar-expand\" viewBox=\"0 0 16 16\">\r\n                                        <path fill-rule=\"evenodd\" d=\"M3.646 10.146a.5.5 0 0 1 .708 0L8 13.793l3.646-3.647a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 0-.708zm0-4.292a.5.5 0 0 0 .708 0L8 2.207l3.646 3.647a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 0 0 0 .708zM1 8a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 0 1h-13A.5.5 0 0 1 1 8z\"/>\r\n                                    </svg>\r\n                                </Offcanvas.Title>\r\n                            </Offcanvas.Header>\r\n                            <Offcanvas.Body>\r\n                            <Form className=\"search d-flex w-100 ms-4\">\r\n                                <Form.Control\r\n                                    type=\"search\"\r\n                                    placeholder=\"Search\"\r\n                                    className=\"me-2\"\r\n                                    aria-label=\"Search\"\r\n                                    value={this.state.item}\r\n                                    onChange={e => this.setState({ item: e.target.value, items_filtered: [] })}\r\n                                    />\r\n                                    <Button variant=\"success\" className=\"me-4\" onClick={this.findItems}>Search</Button>\r\n                                </Form>\r\n                                <Button variant=\"info\" className=\"cart ms-4 me-1\" onClick={this.cartShow} style={{position: \"relative\"}}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"white\" class=\"bi bi-cart-fill\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\"/>\r\n                                    </svg>\r\n                                    {this.state.count > 0 && (\r\n                                        <div className=\"rounded-circle bg-danger d-flex justify-content-center align-items-center\" style={{\r\n                                            color: \"white\",\r\n                                            width: \"1rem\",\r\n                                            height: \"1rem\",\r\n                                            position: \"absolute\",\r\n                                            bottom: 0,\r\n                                            right: 0,\r\n                                            transform: \"translate(25%, 25%)\",\r\n                                            fontSize: 10\r\n                                        }}>{this.state.count}</div>\r\n                                    )}\r\n                                </Button>\r\n                                {\r\n                                    this.props.is_logged_in === false ?\r\n                                    <Button variant=\"primary\" className=\"login ms-1 me-2 text-white\" onClick={this.login}>Login</Button> :\r\n                                    <div className=\"d-flex mx-auto\">\r\n                                        <Button variant=\"outline-light\" className=\"user ms-1 me-1\" disabled>\r\n                                            {\r\n                                            this.props.logged_in_user === \"\" ? \r\n                                                <div>&nbsp;</div> :\r\n                                            this.props.logged_in_user\r\n                                            }\r\n                                        </Button>\r\n                                        <Button variant=\"danger\" className=\"logout ms-1 me-2 text-white\" onClick={this.logout}>Logout</Button>        \r\n                                    </div>                       \r\n                                }\r\n                            </Offcanvas.Body>\r\n                        </Navbar.Offcanvas>\r\n                    </Container>\r\n                </Navbar>\r\n\r\n                <Carousel fade className=\"mt-4 mb-4\">\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block w-100 mx-auto\"\r\n                            style={{ maxWidth: \"800px\", height: \"400px\"}}\r\n                            src=\"holder.js/800x400?text=First slide&bg=373940\"\r\n                            alt=\"First\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3>First slide label</h3>\r\n                            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block w-100 mx-auto\"\r\n                            style={{ maxWidth: \"800px\", height: \"400px\"}}\r\n                            src=\"holder.js/800x400?text=Second slide&bg=373940\"\r\n                            alt=\"Second\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3>Second slide label</h3>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block w-100 mx-auto\"\r\n                            style={{ maxWidth: \"800px\", height: \"400px\"}}\r\n                            src=\"holder.js/800x400?text=Third slide&bg=373940\"\r\n                            alt=\"Third\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3>Third slide label</h3>\r\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n\r\n                <div className=\"me-4 ms-4 mt-4 mb-4\">\r\n                    <h1 className=\"text-white\">All Items</h1>\r\n                    <Row xs={1} sm={1} md={2} lg={3} className=\"g-4\">\r\n                    {\r\n                        // eslint-disable-next-line\r\n                        this.state.items_filtered == \"\" ?\r\n                            this.state.items.map((item) => {\r\n                                return (\r\n                                    <Col>\r\n                                        <Card bg=\"black\" text=\"white\" className=\"text-center h-100\">\r\n                                            <Card.Img variant=\"top\" src={item.image} style={{ height: \"250px\"}}/>\r\n                                                <Card.Body className=\"d-flex flex-column\">\r\n                                                    <Card.Title className=\"fw-bold fs-4\">{item.name}</Card.Title>\r\n                                                    <Card.Text>{item.detail}</Card.Text>\r\n                                                    <div className=\"mt-auto d-flex flex-column\">\r\n                                                        <Card.Text><Badge bg=\"dark\" className=\"fs-5 fw-bold\">{this.formatCurrency(item.price)}</Badge></Card.Text>\r\n                                                        {\r\n                                                            this.state.cart.find(cart => (cart.item === item)) ?   \r\n                                                                <div className=\"d-flex\">                                                       \r\n                                                                    <InputGroup>\r\n                                                                    <Button variant=\"primary\" onClick={() => { this.substractAmount(item) }}>-</Button>\r\n                                                                        <InputGroup.Text>\r\n                                                                        {this.state.cart.map((i) => {\r\n                                                                            if (i.item === item) {\r\n                                                                                return i.amount\r\n                                                                            }\r\n                                                                            return null\r\n                                                                        })}\r\n                                                                        </InputGroup.Text>\r\n                                                                    <Button variant=\"primary\" onClick={() => { this.addAmount(item) }}>+</Button>\r\n                                                                    </InputGroup>\r\n                                                                    <Button variant=\"danger\" onClick={() => { this.remove(item) }}>Remove</Button> \r\n                                                                </div>\r\n                                                                : \r\n                                                            <Button variant=\"primary\" onClick={() => { this.addToCart(item, 1) }}>Add to Cart</Button>\r\n                                                        }                                                        \r\n                                                    </div>\r\n                                                </Card.Body>\r\n                                        </Card>                           \r\n                                    </Col>\r\n                                )\r\n                            }):\r\n                            this.state.items_filtered.map((item) => {\r\n                                return (\r\n                                    <Col>\r\n                                        <Card bg=\"black\" text=\"white\" className=\"text-center h-100\">\r\n                                            <Card.Img variant=\"top\" src={item.image} style={{ height: \"250px\"}}/>\r\n                                                <Card.Body className=\"d-flex flex-column\">\r\n                                                    <Card.Title className=\"fw-bold fs-4\">{item.name}</Card.Title>\r\n                                                    <Card.Text>{item.detail}</Card.Text>\r\n                                                    <div className=\"mt-auto d-flex flex-column\">\r\n                                                        <Card.Text><Badge bg=\"dark\" className=\"fs-5 fw-bold\">{this.formatCurrency(item.price)}</Badge></Card.Text>  \r\n                                                        {\r\n                                                            this.state.cart.find(cart => (cart.item === item)) ?   \r\n                                                                <div className=\"d-flex\">                                                       \r\n                                                                    <InputGroup>\r\n                                                                    <Button variant=\"primary\" onClick={() => { this.substractAmount(item) }}>-</Button>\r\n                                                                        <InputGroup.Text>\r\n                                                                        {this.state.cart.map((i) => {\r\n                                                                            if (i.item === item) {\r\n                                                                                return i.amount\r\n                                                                            }\r\n                                                                            return null\r\n                                                                        })}\r\n                                                                        </InputGroup.Text>\r\n                                                                    <Button variant=\"primary\" onClick={() => { this.addAmount(item) }}>+</Button>\r\n                                                                    </InputGroup>\r\n                                                                    <Button variant=\"danger\" onClick={() => { this.remove(item) }}>Remove</Button> \r\n                                                                </div>\r\n                                                                : \r\n                                                            <Button variant=\"primary\" onClick={() => { this.addToCart(item, 1) }}>Add to Cart</Button>\r\n                                                        }                                                        \r\n                                                    </div>\r\n                                                </Card.Body>\r\n                                        </Card>                           \r\n                                    </Col>\r\n                                )\r\n                            })\r\n                    }\r\n                    </Row>\r\n                </div>\r\n\r\n                <footer className=\"mt-4 text-white\">\r\n                    <div className=\"text-center\">\r\n                        © 2022 Copyright&nbsp;\r\n                        <a href=\"https://www.github.com/Riyuze/\">Riyuze</a>\r\n                    </div>\r\n\r\n                </footer>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nclass Register extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        errorMessage: \"\",\r\n    }\r\n  }\r\n\r\n  onRegister = () => {\r\n    if (this.props.users.find(user => (user.username === this.state.username))) {\r\n        this.setState({ errorMessage: \"Username Already Exists!\" });\r\n    }\r\n    else if (this.state.password !== this.state.confirmPassword) {\r\n        this.setState({ errorMessage: \"Passwords Do Not Match!\" });\r\n    }\r\n    else {\r\n        this.props.addUser({username: this.state.username, password: this.state.password});\r\n        this.successPopUp();\r\n        this.props.changePage(\"Login\");\r\n    }\r\n  }\r\n\r\n  redirectLogin = () => {\r\n    this.props.changePage(\"Login\");\r\n  }\r\n\r\n  successPopUp = () => {\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        background: \"#000000\",\r\n        color: \"#FFFFFF\",\r\n      })\r\n      \r\n      Toast.fire({\r\n        icon: 'success',\r\n        title: 'Registered successfully'\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"Login gradient-custom\">\r\n            <Container>\r\n                <Row className=\"vh-100 d-flex justify-content-center align-items-center\">\r\n                <Col md={8} lg={6} xs={12}>\r\n                    <Card className=\"shadow bg-dark text-white\">\r\n                    <Card.Body className=\"text-center\">\r\n                        <div className=\"mb-3 mt-md-4\">\r\n                            <h2 className=\"fw-bold mb-2 text-uppercase\">Register</h2>\r\n                            <p className=\" mb-5\">Please enter your username and password!</p>\r\n                                <div className=\"mb-3\">\r\n\r\n                                    <Form>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <FloatingLabel label=\"Username\" className=\"mb-3 text-secondary\">\r\n                                                <Form.Control placeholder=\"Enter Username\" value={this.state.username} onChange={event => this.setState({ username: event.target.value })}/>\r\n                                            </FloatingLabel>\r\n                                        </Form.Group>             \r\n\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <FloatingLabel label=\"Password\" className=\"mb-3 text-secondary\">\r\n                                                <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={event => this.setState({ password: event.target.value })}/>\r\n                                            </FloatingLabel>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <FloatingLabel label=\"Confirm Password\" className=\"mb-3 text-secondary\">\r\n                                                <Form.Control type=\"password\" placeholder=\"Confirm Password\" value={this.state.confirmPassword} onChange={event => this.setState({ confirmPassword: event.target.value })}/>\r\n                                            </FloatingLabel>\r\n                                        </Form.Group>\r\n\r\n                                        {\r\n                                            this.state.errorMessage !== \"\" ?\r\n                                                <Alert variant=\"danger\">{this.state.errorMessage}</Alert> : null\r\n                                        }\r\n\r\n                                        <div className=\"d-grid\">\r\n                                            <Button variant=\"outline-light\" onClick={this.onRegister} size=\"lg\">\r\n                                                Register\r\n                                            </Button>\r\n                                        </div>    \r\n\r\n                                    </Form>\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        <p className=\"mb-0 text-center\">\r\n                                            <span className=\"d-inline-block align-middle\">Already have an account?</span>\r\n                                            <Button variant=\"link ps-1 pt-1\" onClick={this.redirectLogin}>Login</Button>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Login from \"./Login.js\"\r\nimport Homepage from \"./Homepage.js\"\r\nimport Register from \"./Register.js\"\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      page: \"Homepage\",\r\n      users: [{\r\n        username: \"\",\r\n        password: \"\"\r\n      }],\r\n      is_logged_in: false,\r\n      logged_in_user: \"\",\r\n    }\r\n  }\r\n\r\n  changePage = (newPage) => {\r\n    this.setState({page: newPage})\r\n  }\r\n\r\n  addUser = (user) => {\r\n    this.setState({users: this.state.users.concat(user)})\r\n  }\r\n\r\n  changeLogin = (state) => {\r\n    this.setState({is_logged_in: state})\r\n  }\r\n\r\n  setLoggedUser = (user) => {\r\n    this.setState({logged_in_user: user})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className= \"App\">\r\n        {\r\n          this.state.page === \"Login\" ?\r\n          <Login changePage = {this.changePage} users = {this.state.users} changeLogin = {this.changeLogin} setLoggedUser = {this.setLoggedUser}/> :\r\n          this.state.page === \"Register\" ?\r\n          <Register changePage = {this.changePage} users = {this.state.users} addUser = {this.addUser}/> :\r\n          <Homepage changePage = {this.changePage} is_logged_in = {this.state.is_logged_in} logged_in_user = {this.state.logged_in_user} changeLogin = {this.changeLogin}/> \r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n"],"sourceRoot":""}